// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// floats.cpp
sexp cpp_floats(double size, double fill);
extern "C" SEXP _metal_cpp_floats(SEXP size, SEXP fill) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_floats(cpp11::as_cpp<cpp11::decay_t<double>>(size), cpp11::as_cpp<cpp11::decay_t<double>>(fill)));
  END_CPP11
}
// floats.cpp
sexp cpp_as_floats(sexp x);
extern "C" SEXP _metal_cpp_as_floats(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_as_floats(cpp11::as_cpp<cpp11::decay_t<sexp>>(x)));
  END_CPP11
}
// floats.cpp
logicals cpp_from_floats_lgl(sexp floats_sexp);
extern "C" SEXP _metal_cpp_from_floats_lgl(SEXP floats_sexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_from_floats_lgl(cpp11::as_cpp<cpp11::decay_t<sexp>>(floats_sexp)));
  END_CPP11
}
// floats.cpp
integers cpp_from_floats_int(sexp floats_sexp);
extern "C" SEXP _metal_cpp_from_floats_int(SEXP floats_sexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_from_floats_int(cpp11::as_cpp<cpp11::decay_t<sexp>>(floats_sexp)));
  END_CPP11
}
// floats.cpp
doubles cpp_from_floats_dbl(sexp floats_sexp);
extern "C" SEXP _metal_cpp_from_floats_dbl(SEXP floats_sexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_from_floats_dbl(cpp11::as_cpp<cpp11::decay_t<sexp>>(floats_sexp)));
  END_CPP11
}
// metal.cpp
sexp cpp_default_device();
extern "C" SEXP _metal_cpp_default_device() {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_default_device());
  END_CPP11
}
// metal.cpp
list cpp_device_info(sexp device_sexp);
extern "C" SEXP _metal_cpp_device_info(SEXP device_sexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_device_info(cpp11::as_cpp<cpp11::decay_t<sexp>>(device_sexp)));
  END_CPP11
}
// metal.cpp
sexp cpp_make_library(sexp device_sexp, std::string code);
extern "C" SEXP _metal_cpp_make_library(SEXP device_sexp, SEXP code) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_make_library(cpp11::as_cpp<cpp11::decay_t<sexp>>(device_sexp), cpp11::as_cpp<cpp11::decay_t<std::string>>(code)));
  END_CPP11
}
// metal.cpp
strings cpp_library_function_names(sexp library_sexp);
extern "C" SEXP _metal_cpp_library_function_names(SEXP library_sexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_library_function_names(cpp11::as_cpp<cpp11::decay_t<sexp>>(library_sexp)));
  END_CPP11
}
// metal.cpp
sexp cpp_library_function(sexp library_sexp, std::string name);
extern "C" SEXP _metal_cpp_library_function(SEXP library_sexp, SEXP name) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_library_function(cpp11::as_cpp<cpp11::decay_t<sexp>>(library_sexp), cpp11::as_cpp<cpp11::decay_t<std::string>>(name)));
  END_CPP11
}
// metal.cpp
list cpp_function_info(sexp function_sexp);
extern "C" SEXP _metal_cpp_function_info(SEXP function_sexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_function_info(cpp11::as_cpp<cpp11::decay_t<sexp>>(function_sexp)));
  END_CPP11
}
// metal.cpp
sexp cpp_buffer(sexp device_sexp, double size_dbl);
extern "C" SEXP _metal_cpp_buffer(SEXP device_sexp, SEXP size_dbl) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_buffer(cpp11::as_cpp<cpp11::decay_t<sexp>>(device_sexp), cpp11::as_cpp<cpp11::decay_t<double>>(size_dbl)));
  END_CPP11
}
// metal.cpp
double cpp_buffer_size(sexp buffer_sexp);
extern "C" SEXP _metal_cpp_buffer_size(SEXP buffer_sexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_buffer_size(cpp11::as_cpp<cpp11::decay_t<sexp>>(buffer_sexp)));
  END_CPP11
}
// metal.cpp
void cpp_buffer_copy_from(sexp src_sexp, sexp buffer_sexp, double src_offset, double buffer_offset, double length);
extern "C" SEXP _metal_cpp_buffer_copy_from(SEXP src_sexp, SEXP buffer_sexp, SEXP src_offset, SEXP buffer_offset, SEXP length) {
  BEGIN_CPP11
    cpp_buffer_copy_from(cpp11::as_cpp<cpp11::decay_t<sexp>>(src_sexp), cpp11::as_cpp<cpp11::decay_t<sexp>>(buffer_sexp), cpp11::as_cpp<cpp11::decay_t<double>>(src_offset), cpp11::as_cpp<cpp11::decay_t<double>>(buffer_offset), cpp11::as_cpp<cpp11::decay_t<double>>(length));
    return R_NilValue;
  END_CPP11
}
// metal.cpp
sexp cpp_buffer_copy_into(sexp buffer_sexp, sexp ptype, double buffer_offset, double length);
extern "C" SEXP _metal_cpp_buffer_copy_into(SEXP buffer_sexp, SEXP ptype, SEXP buffer_offset, SEXP length) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_buffer_copy_into(cpp11::as_cpp<cpp11::decay_t<sexp>>(buffer_sexp), cpp11::as_cpp<cpp11::decay_t<sexp>>(ptype), cpp11::as_cpp<cpp11::decay_t<double>>(buffer_offset), cpp11::as_cpp<cpp11::decay_t<double>>(length)));
  END_CPP11
}
// metal.cpp
sexp cpp_buffer_pointer(sexp buffer_sexp);
extern "C" SEXP _metal_cpp_buffer_pointer(SEXP buffer_sexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_buffer_pointer(cpp11::as_cpp<cpp11::decay_t<sexp>>(buffer_sexp)));
  END_CPP11
}
// metal.cpp
sexp cpp_command_queue(sexp device_sexp);
extern "C" SEXP _metal_cpp_command_queue(SEXP device_sexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_command_queue(cpp11::as_cpp<cpp11::decay_t<sexp>>(device_sexp)));
  END_CPP11
}
// metal.cpp
sexp cpp_compute_pipeline(sexp function_sexp);
extern "C" SEXP _metal_cpp_compute_pipeline(SEXP function_sexp) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_compute_pipeline(cpp11::as_cpp<cpp11::decay_t<sexp>>(function_sexp)));
  END_CPP11
}
// metal.cpp
void cpp_compute_pipeline_execute(sexp pipeline_sexp, sexp commmand_queue_sexp, list args);
extern "C" SEXP _metal_cpp_compute_pipeline_execute(SEXP pipeline_sexp, SEXP commmand_queue_sexp, SEXP args) {
  BEGIN_CPP11
    cpp_compute_pipeline_execute(cpp11::as_cpp<cpp11::decay_t<sexp>>(pipeline_sexp), cpp11::as_cpp<cpp11::decay_t<sexp>>(commmand_queue_sexp), cpp11::as_cpp<cpp11::decay_t<list>>(args));
    return R_NilValue;
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_metal_cpp_as_floats",                (DL_FUNC) &_metal_cpp_as_floats,                1},
    {"_metal_cpp_buffer",                   (DL_FUNC) &_metal_cpp_buffer,                   2},
    {"_metal_cpp_buffer_copy_from",         (DL_FUNC) &_metal_cpp_buffer_copy_from,         5},
    {"_metal_cpp_buffer_copy_into",         (DL_FUNC) &_metal_cpp_buffer_copy_into,         4},
    {"_metal_cpp_buffer_pointer",           (DL_FUNC) &_metal_cpp_buffer_pointer,           1},
    {"_metal_cpp_buffer_size",              (DL_FUNC) &_metal_cpp_buffer_size,              1},
    {"_metal_cpp_command_queue",            (DL_FUNC) &_metal_cpp_command_queue,            1},
    {"_metal_cpp_compute_pipeline",         (DL_FUNC) &_metal_cpp_compute_pipeline,         1},
    {"_metal_cpp_compute_pipeline_execute", (DL_FUNC) &_metal_cpp_compute_pipeline_execute, 3},
    {"_metal_cpp_default_device",           (DL_FUNC) &_metal_cpp_default_device,           0},
    {"_metal_cpp_device_info",              (DL_FUNC) &_metal_cpp_device_info,              1},
    {"_metal_cpp_floats",                   (DL_FUNC) &_metal_cpp_floats,                   2},
    {"_metal_cpp_from_floats_dbl",          (DL_FUNC) &_metal_cpp_from_floats_dbl,          1},
    {"_metal_cpp_from_floats_int",          (DL_FUNC) &_metal_cpp_from_floats_int,          1},
    {"_metal_cpp_from_floats_lgl",          (DL_FUNC) &_metal_cpp_from_floats_lgl,          1},
    {"_metal_cpp_function_info",            (DL_FUNC) &_metal_cpp_function_info,            1},
    {"_metal_cpp_library_function",         (DL_FUNC) &_metal_cpp_library_function,         2},
    {"_metal_cpp_library_function_names",   (DL_FUNC) &_metal_cpp_library_function_names,   1},
    {"_metal_cpp_make_library",             (DL_FUNC) &_metal_cpp_make_library,             2},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_metal(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
